{
  "$defs": {
    "ImplementCompletionModel": {
      "description": "Configuration for the completion phase of implementation.",
      "properties": {
        "judge-extra-prompt": {
          "default": "",
          "description": "Additional instructions for *evaluating* whether the implementation is complete. This phase determines if the agent has successfully implemented the task.",
          "title": "Judge-Extra-Prompt",
          "type": "string"
        }
      },
      "title": "ImplementCompletionModel",
      "type": "object"
    },
    "ImplementModel": {
      "description": "Configuration for the implementation phase of the agent.",
      "properties": {
        "extra-prompt": {
          "default": "",
          "description": "Additional prompt for *implementing* the plan.",
          "title": "Extra-Prompt",
          "type": "string"
        },
        "judge-extra-prompt": {
          "default": "",
          "description": "Additional prompt for *evaluating* the implementation.",
          "title": "Judge-Extra-Prompt",
          "type": "string"
        },
        "max-implementation-attempts": {
          "default": 10,
          "description": "Maximum number of attempts for the implementation phase.",
          "title": "Max-Implementation-Attempts",
          "type": "integer"
        },
        "max-consecutive-failures": {
          "default": 3,
          "description": "Maximum number of consecutive failures before giving up.",
          "title": "Max-Consecutive-Failures",
          "type": "integer"
        },
        "completion": {
          "$ref": "#/$defs/ImplementCompletionModel"
        }
      },
      "title": "ImplementModel",
      "type": "object"
    },
    "LLMEngineModel": {
      "description": "Configuration for the LLM used by the agent.",
      "properties": {
        "engine": {
          "default": "gemini",
          "description": "LLM engine to use (e.g., 'gemini', 'claude', 'codex', 'openrouter', 'opencode', 'mock')",
          "enum": [
            "gemini",
            "claude",
            "codex",
            "openrouter",
            "opencode",
            "mock"
          ],
          "title": "Engine",
          "type": "string"
        },
        "model": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Model to use for the specified LLM engine. For `gemini`, you can use shortcuts 'pro' and 'flash'.",
          "title": "Model"
        }
      },
      "title": "LLMEngineModel",
      "type": "object"
    },
    "MockLLMModel": {
      "description": "Configuration for the --mock LLM.",
      "properties": {
        "delay": {
          "default": 5,
          "description": "Set a 'sleep' inside each mock llm invocation",
          "title": "Delay",
          "type": "integer"
        }
      },
      "title": "MockLLMModel",
      "type": "object"
    },
    "PlanModel": {
      "description": "Configuration for the planning phase of the agent.",
      "properties": {
        "planner-extra-prompt": {
          "default": "",
          "description": "Additional instructions for *generating* the plan.",
          "title": "Planner-Extra-Prompt",
          "type": "string"
        },
        "judge-extra-prompt": {
          "default": "",
          "description": "Additional instructions for *evaluating* the plan.",
          "title": "Judge-Extra-Prompt",
          "type": "string"
        }
      },
      "title": "PlanModel",
      "type": "object"
    },
    "TaskModel": {
      "description": "Configuration for the task to be executed by the agent.",
      "properties": {
        "prompt": {
          "description": "Task description or prompt to execute",
          "title": "Prompt",
          "type": "string"
        },
        "cwd": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Working directory for task execution",
          "title": "Cwd"
        },
        "base": {
          "anyOf": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Base branch, commit, or git specifier",
          "title": "Base"
        },
        "no-worktree": {
          "anyOf": [
            {
              "type": "boolean"
            },
            {
              "type": "null"
            }
          ],
          "default": null,
          "description": "Work directly in the target directory rather than in a temporary Git worktree.",
          "title": "No-Worktree"
        }
      },
      "required": [
        "prompt"
      ],
      "title": "TaskModel",
      "type": "object"
    }
  },
  "description": "ConfigModel defines the configuration for the agent.\nCurrently it is equivalent to the `.ok.toml` config file.\nIt's intended to be used by most of the agent code.",
  "properties": {
    "run-timeout-seconds": {
      "default": 10,
      "description": "Maximum time (in seconds) allowed for any shell command, excluding LLM calls",
      "title": "Run-Timeout-Seconds",
      "type": "integer"
    },
    "llm-timeout-seconds": {
      "default": 300,
      "description": "Maximum time (in seconds) allowed for any LLM call",
      "title": "Llm-Timeout-Seconds",
      "type": "integer"
    },
    "quiet": {
      "default": false,
      "description": "Suppress informational output",
      "title": "Quiet",
      "type": "boolean"
    },
    "plan": {
      "$ref": "#/$defs/PlanModel",
      "description": "Configuration for the planning phase."
    },
    "implement": {
      "$ref": "#/$defs/ImplementModel",
      "description": "Configuration for the implementation phase."
    },
    "llm": {
      "$ref": "#/$defs/LLMEngineModel"
    },
    "mock-cfg": {
      "$ref": "#/$defs/MockLLMModel"
    },
    "tasks": {
      "default": [],
      "description": "Configuration for the tasks to be executed by the agent.",
      "items": {
        "$ref": "#/$defs/TaskModel"
      },
      "title": "Tasks",
      "type": "array"
    },
    "post-implementation-hook-command": {
      "default": "",
      "description": "Shell command to run after each implementation step, e.g. 'ruff format'",
      "title": "Post-Implementation-Hook-Command",
      "type": "string"
    },
    "post-implementation-check-command": {
      "default": "",
      "description": "Shell command to run after the post-implementation-hook-command. If it fails, the agent makes another attempt and its stdout/stderr is the feedback.",
      "title": "Post-Implementation-Check-Command",
      "type": "string"
    },
    "cwd": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "null"
        }
      ],
      "default": null,
      "description": "Working directory for task execution. (default: current working directory)",
      "title": "Cwd"
    },
    "base": {
      "default": "HEAD",
      "description": "Base branch, commit, or git specifier for tasks.",
      "title": "Base",
      "type": "string"
    },
    "no-worktree": {
      "default": false,
      "description": "Work directly in the target directory rather than in a temporary Git worktree.",
      "title": "No-Worktree",
      "type": "boolean"
    },
    "$schema": {
      "type": "string",
      "description": "The schema URL for validation."
    }
  },
  "title": "AgentSettings",
  "type": "object",
  "$schema": "https://json-schema.org/draft/2020-12/schema"
}
